swagger: "2.0"
info:
  description: Documentation for timetracker backend
  version: "1.0.0"
  title: Timetracker docs
consumes:
  - "application/json"
produces:
  - "application/json"

basePath: "/api"

paths:
  /users:
    get:
      operationId: users.list_all
      tags:
        - Users
      summary: Get all users
      description: Get all users
      responses:
        200:
          description: Lists all users
          schema:
            properties: 
              success:
                type: boolean
              data:
                type: array
                items:
                  properties:
                    id:
                      type: number
                    name:
                      type: string
    post:
      operationId: users.add
      tags:
        - Users
      summary: Add a user
      description: Add a user
      parameters:
        - name: user
          in: body
          schema:
            properties:
              email:
                type: string
              name:
                type: string
          required: True
      responses:
        201:
          description: The new user was successfully created
          schema:
            properties:
              success:
                type: boolean
              data:
                type: object
                properties:
                  id:
                    type: number
                  name:
                    type: string
                  email:
                    type: string
        400:
          description: Failed to add new user due to input error
          schema:
            properties:
              success:
                type: boolean
                default: False
              data:
                type: object
                properties:
                  message:
                    type: string
                    default: "Missing attribute: name"
  /users/{id}:
    get:
      operationId: users.get
      tags:
        - Users
      summary: Get a user
      description: Get one user with specified ID
      parameters:
        - name: id
          in: path
          description: ID of user to get
          type: string
          required: True
      responses:
        200:
          description: User that was found
          schema:
            properties:
              success:
                type: boolean
              data:
                type: object
                properties:
                  id:
                    type: number
                  name:
                    type: string
                  email:
                    type: string
        404:
          description: User was not found
          schema:
            properties:
              success:
                type: boolean
                default: False
              data:
                type: object
                properties:
                  message:
                    type: string
    put:
      operationId: users.update
      tags:
        - Users
      summary: Update a user
      description: Update user with specified ID
      parameters:
        - name: id
          in: path
          description: ID of user to update
          type: string
          required: True
        - name: user
          in: body
          schema:
            properties:
              name:
                type: string
              email:
                type: string
      responses:
        200:
          description: The user that was updated
          schema:
            properties:
              success:
                type: boolean
              data:
                properties:
                  id:
                    type: number
                  name:
                    type: string
                  email:
                    type: string
        404:
          description: Failed to find user
          schema:
            properties:
              success:
                type: boolean
                default: False
              data:
                properties:
                  message:
                    type: string

    delete:
      operationId: users.remove
      tags:
        - Users
      summary: Remove a user
      description: Remove a user with specified ID
      parameters:
        - name: id
          in: path
          description: ID of user
          type: string
          required: True
      responses:
        200:
          description: User was removed
          schema:
            properties: 
              success:
                type: boolean